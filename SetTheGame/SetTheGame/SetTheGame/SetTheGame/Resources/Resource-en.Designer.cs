//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SetTheGame.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource_en {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource_en() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SetTheGame.Resources.Resource-en", typeof(Resource_en).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a set !.
        /// </summary>
        internal static string AlreadyASet {
            get {
                return ResourceManager.GetString("AlreadyASet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another card.
        /// </summary>
        internal static string AskButtonText {
            get {
                return ResourceManager.GetString("AskButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give an answer.
        /// </summary>
        internal static string CheatButtonText {
            get {
                return ResourceManager.GetString("CheatButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chose a game mode.
        /// </summary>
        internal static string ChoseAGamemodeText {
            get {
                return ResourceManager.GetString("ChoseAGamemodeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chose a leaderboard.
        /// </summary>
        internal static string ChoseLeaderboard {
            get {
                return ResourceManager.GetString("ChoseLeaderboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click Here !.
        /// </summary>
        internal static string ClickHereButton {
            get {
                return ResourceManager.GetString("ClickHereButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright !.
        /// </summary>
        internal static string CloseRules {
            get {
                return ResourceManager.GetString("CloseRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anonymous.
        /// </summary>
        internal static string DefaultUsername {
            get {
                return ResourceManager.GetString("DefaultUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easy.
        /// </summary>
        internal static string Easy {
            get {
                return ResourceManager.GetString("Easy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter your username.
        /// </summary>
        internal static string EnterUsernameText {
            get {
                return ResourceManager.GetString("EnterUsernameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please chose a game mode.
        /// </summary>
        internal static string ErrorNoSelectedText {
            get {
                return ResourceManager.GetString("ErrorNoSelectedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: no selected mode.
        /// </summary>
        internal static string ErrorNoSelectedTitle {
            get {
                return ResourceManager.GetString("ErrorNoSelectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The goal of the &quot;Score Race&quot; is to gain a maximum of points in a given time of your choice, which can vary from 2 to 15 minutes.
        ///
        ///The aim of the &quot;Race to Time&quot; is to give correct answers as quickly as possible so that the entire package can be sold in the shortest possible time..
        /// </summary>
        internal static string GamemodeHelpButtonText {
            get {
                return ResourceManager.GetString("GamemodeHelpButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game mode presentation: .
        /// </summary>
        internal static string GamemodeHelpButtonTitle {
            get {
                return ResourceManager.GetString("GamemodeHelpButtonTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Race.
        /// </summary>
        internal static string GamemodePickerAgainstScore {
            get {
                return ResourceManager.GetString("GamemodePickerAgainstScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score Race.
        /// </summary>
        internal static string GamemodePickerAgainstTime {
            get {
                return ResourceManager.GetString("GamemodePickerAgainstTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game rules.
        /// </summary>
        internal static string GameRulesAnnoncement {
            get {
                return ResourceManager.GetString("GameRulesAnnoncement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to got.
        /// </summary>
        internal static string Got {
            get {
                return ResourceManager.GetString("Got", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hard.
        /// </summary>
        internal static string Hard {
            get {
                return ResourceManager.GetString("Hard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HyperSET tuto.
        /// </summary>
        internal static string HypersetTutorial {
            get {
                return ResourceManager.GetString("HypersetTutorial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you think that these 4 cards form a HyperSET ? Take your time to answer !.
        /// </summary>
        internal static string HypersetTutorialHypersetQuestion {
            get {
                return ResourceManager.GetString("HypersetTutorialHypersetQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You have completed the HyperSET tutorial!
        ///
        ///We will now launch a game of HyperSET in beginner mode. In this beginner mode, you will have the possibility of cheating, which means asking for an answer to the game. We advise you to take your time in order to analyze why the answer is valid..
        /// </summary>
        internal static string HypersetTutorialPageFive {
            get {
                return ResourceManager.GetString("HypersetTutorialPageFive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Several HyperSETs are hidden among the following cards. Can you find one?.
        /// </summary>
        internal static string HypersetTutorialPageFourPartOne {
            get {
                return ResourceManager.GetString("HypersetTutorialPageFourPartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Well played, you found a HyperSET !.
        /// </summary>
        internal static string HypersetTutorialPageFourPartTwo {
            get {
                return ResourceManager.GetString("HypersetTutorialPageFourPartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the HyperSET tutorial!
        ///
        ///If you want to learn how to play HyperSET, it is imperative to know how to play SET. If you are not familiar with SET, then we invite you to practice playing in this game mode. If you do not know the SET game, we suggest you play the SET tutorial and practice to be comfortable..
        /// </summary>
        internal static string HypersetTutorialPageOnePartOne {
            get {
                return ResourceManager.GetString("HypersetTutorialPageOnePartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HyperSET is played with a set of 81 cards identical to the SET game: three different colors, three different shapes, three different fillings and three different numbers..
        /// </summary>
        internal static string HypersetTutorialPageOnePartTwo {
            get {
                return ResourceManager.GetString("HypersetTutorialPageOnePartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right answer ! The 4 cards do form a HyperSET as shown below..
        /// </summary>
        internal static string HypersetTutorialPageThreePartOneCorrectRight {
            get {
                return ResourceManager.GetString("HypersetTutorialPageThreePartOneCorrectRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong answer ! The 4 cards above form a HyperSET as shown below..
        /// </summary>
        internal static string HypersetTutorialPageThreePartOneCorrectWrong {
            get {
                return ResourceManager.GetString("HypersetTutorialPageThreePartOneCorrectWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right answer ! There is no ghost card that can complement these 4 cards..
        /// </summary>
        internal static string HypersetTutorialPageThreePartOneIncorrectRight {
            get {
                return ResourceManager.GetString("HypersetTutorialPageThreePartOneIncorrectRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong answer ! These 4 cards do not form a HyperSET!.
        /// </summary>
        internal static string HypersetTutorialPageThreePartOneIncorrectWrong {
            get {
                return ResourceManager.GetString("HypersetTutorialPageThreePartOneIncorrectWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right answer ! The 4 cards above form a HyperSET! The details are shown below..
        /// </summary>
        internal static string HypersetTutorialPageThreePartOneRight {
            get {
                return ResourceManager.GetString("HypersetTutorialPageThreePartOneRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The two cards on the left form a SET with the central card. Likewise, the cards on the right form a SET with the central card. The 4 cards (the two cards on the left and the two cards on the right) therefore form a HyperSET, and the central card is the Ghost Card..
        /// </summary>
        internal static string HypersetTutorialPageThreePartTwoRight {
            get {
                return ResourceManager.GetString("HypersetTutorialPageThreePartTwoRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A HyperSET consists of 4 cards. These 4 cards, put two by two, must form two SETs if they are completed by a same 5th card. This card is not necessarily on the board and is called &quot;Ghost Card&quot;..
        /// </summary>
        internal static string HypersetTutorialPageTwoPartOne {
            get {
                return ResourceManager.GetString("HypersetTutorialPageTwoPartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cards were divided into two groups of two. By clicking on the button below, a fifth card will appear: it is the Ghost Card. This card forms a SET with the two cards on the left, and forms another with the two cards on the right. The 4 cards therefore form a HyperSET..
        /// </summary>
        internal static string HypersetTutorialPageTwoPartThree {
            get {
                return ResourceManager.GetString("HypersetTutorialPageTwoPartThree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The 4 cards above are an HyperSET. Let&apos;s explain that :.
        /// </summary>
        internal static string HypersetTutorialPageTwoPartTwo {
            get {
                return ResourceManager.GetString("HypersetTutorialPageTwoPartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in.
        /// </summary>
        internal static string In {
            get {
                return ResourceManager.GetString("In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click on the text to chose a classment type..
        /// </summary>
        internal static string LeaderboardAlertText {
            get {
                return ResourceManager.GetString("LeaderboardAlertText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to minutes!.
        /// </summary>
        internal static string Minutes {
            get {
                return ResourceManager.GetString("Minutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next page.
        /// </summary>
        internal static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more card.
        /// </summary>
        internal static string NoMoreCardsText {
            get {
                return ResourceManager.GetString("NoMoreCardsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No score have been save for this game mode.
        /// </summary>
        internal static string NoScore {
            get {
                return ResourceManager.GetString("NoScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of sets available: .
        /// </summary>
        internal static string NumberOfSetsAvailableText {
            get {
                return ResourceManager.GetString("NumberOfSetsAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play.
        /// </summary>
        internal static string Play {
            get {
                return ResourceManager.GetString("Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player.
        /// </summary>
        internal static string Player {
            get {
                return ResourceManager.GetString("Player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to points.
        /// </summary>
        internal static string Points {
            get {
                return ResourceManager.GetString("Points", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Previous page.
        /// </summary>
        internal static string Previous {
            get {
                return ResourceManager.GetString("Previous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remaining time: .
        /// </summary>
        internal static string RemainingTimeText {
            get {
                return ResourceManager.GetString("RemainingTimeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry.
        /// </summary>
        internal static string Retry {
            get {
                return ResourceManager.GetString("Retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score.
        /// </summary>
        internal static string Score {
            get {
                return ResourceManager.GetString("Score", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your score is: .
        /// </summary>
        internal static string ScoreLabelText {
            get {
                return ResourceManager.GetString("ScoreLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score per minute.
        /// </summary>
        internal static string ScorePerMinute {
            get {
                return ResourceManager.GetString("ScorePerMinute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  seconds..
        /// </summary>
        internal static string Seconds {
            get {
                return ResourceManager.GetString("Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET tutorial.
        /// </summary>
        internal static string SetTutorial {
            get {
                return ResourceManager.GetString("SetTutorial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the card.
        /// </summary>
        internal static string ShowCard {
            get {
                return ResourceManager.GetString("ShowCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leaderboard.
        /// </summary>
        internal static string ShowScores {
            get {
                return ResourceManager.GetString("ShowScores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start game.
        /// </summary>
        internal static string StartGame {
            get {
                return ResourceManager.GetString("StartGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time.
        /// </summary>
        internal static string Time {
            get {
                return ResourceManager.GetString("Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your time:.
        /// </summary>
        internal static string TimeFromBeginning {
            get {
                return ResourceManager.GetString("TimeFromBeginning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tutorial.
        /// </summary>
        internal static string Tutorial {
            get {
                return ResourceManager.GetString("Tutorial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Three SET hid among the 9 following cards! Will you find one?.
        /// </summary>
        internal static string TutorialPageFivePartOne {
            get {
                return ResourceManager.GetString("TutorialPageFivePartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Well done! You found a SET!.
        /// </summary>
        internal static string TutorialPageFivePartTwo {
            get {
                return ResourceManager.GetString("TutorialPageFivePartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do the 3 cards above form a SET?.
        /// </summary>
        internal static string TutorialPageFourMultipleParts {
            get {
                return ResourceManager.GetString("TutorialPageFourMultipleParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A little practice!
        ///
        ///Do the following 3 cards form a SET?.
        /// </summary>
        internal static string TutorialPageFourPartOne {
            get {
                return ResourceManager.GetString("TutorialPageFourPartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right answer ! The 3 cards above form a SET since the 4 criteria (shape, color, number, filling) are all identical or different for the 3 cards..
        /// </summary>
        internal static string TutorialPageFourPartThreeRight {
            get {
                return ResourceManager.GetString("TutorialPageFourPartThreeRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong answer ! The 3 cards above form a SET. Indeed, the 4 criteria (shape, color, number and filling) are all either identical or different for the 3 cards..
        /// </summary>
        internal static string TutorialPageFourPartThreeWrong {
            get {
                return ResourceManager.GetString("TutorialPageFourPartThreeWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right answer ! Since two cards have filled shapes, but not the third, the 3 cards above do not form a SET..
        /// </summary>
        internal static string TutorialPageFourPartTwoRight {
            get {
                return ResourceManager.GetString("TutorialPageFourPartTwoRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong answer ! The 3 cards above are not suitable because the filling of the symbols is not good. The 3 cards have neither a strictly identical filling nor a strictly different filling..
        /// </summary>
        internal static string TutorialPageFourPartTwoWrong {
            get {
                return ResourceManager.GetString("TutorialPageFourPartTwoWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the SET tutorial!
        ///
        ///The SET game consists of 81 cards that have symbols that have 4 distinct characteristics:
        ///- Their shape: oval, diamon, wave
        ///- Their color: Blue, red, green (modifiable in the options)
        ///- Their quantity: One, two, three forms
        ///- Their filling: Full, empty, hatched.
        /// </summary>
        internal static string TutorialPageOnePartOne {
            get {
                return ResourceManager.GetString("TutorialPageOnePartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The three cards above represent the different fills, shapes, colors and numbers available.
        ///
        ///The goal of the game is to find groups of 3 cards that meet specific criteria as quickly as possible. These groups are called SET..
        /// </summary>
        internal static string TutorialPageOnePartTwo {
            get {
                return ResourceManager.GetString("TutorialPageOnePartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations! You have finished the tutorial of SET!
        ///
        ///If you wish, you can replay the tutorial in the options menu.
        ///
        ///We will now start a game of SET in beginner mode. During this part, you will have the opportunity to &quot;cheat&quot;, that is to say to click on a button that will give you an answer. But beware, you will lose a point if you do!.
        /// </summary>
        internal static string TutorialPageSixPartOne {
            get {
                return ResourceManager.GetString("TutorialPageSixPartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two other examples:.
        /// </summary>
        internal static string TutorialPageThreePartOne {
            get {
                return ResourceManager.GetString("TutorialPageThreePartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The 3 cards above, as for them, do not form a SET. They verify certain criteria:
        ///- The 3 cards have the same number
        ///- The 3 cards have different colors
        ///- The 3 cards have a different fill
        ///But they do not validate the criterion of form! Indeed, two of them have a diamond shape, but not the third..
        /// </summary>
        internal static string TutorialPageThreePartThree {
            get {
                return ResourceManager.GetString("TutorialPageThreePartThree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The 3 cards above form a SET since:
        ///- The 3 cards have the same form
        ///- The 3 cards have a different number
        ///- The 3 cards have a different fill
        ///- The 3 cards have the same colors.
        /// </summary>
        internal static string TutorialPageThreePartTwo {
            get {
                return ResourceManager.GetString("TutorialPageThreePartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SET is composed of 3 cards. Each card has 4 characteristics that are either completely identical or completely different to the two other cards in the set.
        ///3 cards form a set if and only if these 4 rules are respected.
        ///- The colour of the symbol is either 3 times identical or 3 times different
        ///- The shape of the symbol  is either 3 times identical or 3 times different
        ///- The number of symbols  is either 3 times identical or 3 times different
        ///- The way the symbol is filled in is either 3 times identica [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TutorialPageTwoPartOne {
            get {
                return ResourceManager.GetString("TutorialPageTwoPartOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The three cards above form a SET. Let&apos;s detail the 4 criteria presented above:
        ///
        ///- The 3 cards have the same shape: ✔
        ///- The 3 cards have different colors: ✔
        ///- The 3 cards have a different number: ✔
        ///- The 3 cards have a different filling: ✔.
        /// </summary>
        internal static string TutorialPageTwoPartTwo {
            get {
                return ResourceManager.GetString("TutorialPageTwoPartTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        internal static string Username {
            get {
                return ResourceManager.GetString("Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to launch the tutorial?.
        /// </summary>
        internal static string WantATutorial {
            get {
                return ResourceManager.GetString("WantATutorial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You got.
        /// </summary>
        internal static string YourScoreText {
            get {
                return ResourceManager.GetString("YourScoreText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You made it in.
        /// </summary>
        internal static string YourTimeText {
            get {
                return ResourceManager.GetString("YourTimeText", resourceCulture);
            }
        }
    }
}
